#!/bin/bash

# esto hace que el script falle inmediatamente ocurra el primer error y no permite usar variables que no han sido declaradas
set -eu

# variables utilizadas
ca_home="/var/lib/docker-ci-swarm-ca"
fqdn="$(hostname -f)"

if ip addr list | egrep '\b192.168.12.212\b' > /dev/null
then
  ip_addr="192.168.12.212"
elif ip addr list | egrep '\b192.168.12.37\b' > /dev/null
then
  ip_addr="192.168.12.37"
else
  echo "Este es un ambiente desconocido, me refuso a instalarme aquí"
  exit 1
fi

# ubicación de los paquetes
ci_ca_pkg="https://github.com/andresvia/oas-ci-swarm-ca/releases/download/v0.0.2/oas-ci-swarm-ca-0.0.2_travis.4-1.x86_64.rpm"
ci_server_pkg="https://github.com/andresvia/oas-ci-server/releases/download/v0.1.2/oas-ci-server-0.1.2_travis.30-1.x86_64.rpm"
ci_agent_pkg="https://github.com/andresvia/oas-ci-agent/releases/download/v0.1.2/oas-ci-agent-0.1.2_travis.27-1.x86_64.rpm"

# hay muchas políticas de selinux que hay que encontrar primero antes de habilitar el modo "enforcing", se deja como tarea para el administrador de sistemas encontrar todas las reglas de selinux necesarias
setenforce permissive
sed -i.bak 's/^SELINUX=.*/SELINUX=permissive/' /etc/selinux/config

# instalar el paquete de oas-ci-swarm-ca
# es necesario para crear los certificados tls, en producción se recomienda instalar en un servidor aparte
yum install -y "${ci_ca_pkg}" || true
if ! rpm -q oas-ci-swarm-ca > /dev/null
then
  echo no se pudo instalar el paquete oas-ci-swarm-ca
  exit 1
fi

# utilizar el programa swarm-ci-create-server-cert para crear los certificados de swarm para ester servidor
/usr/sbin/swarm-ci-create-server-cert swarm "${fqdn}" "${ip_addr}" # mas direcciones ip se pueden especificar aquí
mkdir -p /etc/ci-swarm-manage/certs.d/
cp -vf "${ca_home}/swarm/"* /etc/ci-swarm-manage/certs.d/
if ! grep "${ip_addr}" /etc/ci-swarm-manage/nodes > /dev/null
then
  echo "${ip_addr}:2376" >> /etc/ci-swarm-manage/nodes
fi

# instalar el paquete oas-ci-server
yum install -y "${ci_server_pkg}" || true
if ! rpm -q oas-ci-server > /dev/null
then
  echo no se pudo instalar el paquete oas-ci-server
  exit 1
fi

# utilizar el programa swarm-ci-create-server-cert para crear los certificados de docker para ester servidor
/usr/sbin/swarm-ci-create-server-cert server "${fqdn}" "${ip_addr}" # mas direcciones ip se pueden especificar aquí
mkdir -p /etc/docker/certs.d/
cp -vf "${ca_home}/${fqdn}/"* /etc/docker/certs.d/

# instalar el paquete oas-ci-agent
yum install -y "${ci_agent_pkg}" || true
if ! rpm -q oas-ci-agent > /dev/null
then
  echo no se pudo instalar el paquete oas-ci-agent
  exit 1
fi

# esto se debe hacer en los agentes para permitir que puedan bajar imágenes del registry o el registry debe contar con certificados SSL
sed -i.bak "s|^#\? \?INSECURE_REGISTRY=.*|INSECURE_REGISTRY='--insecure-registry=${ip_addr}:5000'|" /etc/sysconfig/docker

# crear el grupo docker de manera que otros usuarios aparte de root lo puedan usar
groupadd -r docker || true
if ! egrep '^docker:' /etc/group
then
  echo no se pudo crear el grupo de sistema docker
  exit 1
fi

# poner al usuario vagrant en el grupo docker de manera que pueda ejecutar comandos de docker
usermod -a -G docker vagrant || true
if ! egrep '^docker:.*vagrant.*' /etc/group
then
  echo no se pudo agregar al usuario vagrant al grupo de docker
  exit 1
fi

# instalar ntp para que el servidor tenga la hora sincronizada
yum install -y ntp

# habilitar e iniciar todos los servicios necesarios
servicios=(docker ci-swarm-manage gogs drone registry registry-frontend ntpd)
for servicio in ${servicios[@]}
do
  systemctl enable $servicio
  systemctl start $servicio
  systemctl status $servicio
done

# realizar una ejecución de ntpdate para tener el servidor sincronizado o fallar con gracia
ntpdate -u pool.ntp.org || true
